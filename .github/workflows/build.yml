name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: build-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify-version:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Verify tag matches package.json version
        shell: bash
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${GITHUB_REF_NAME#v}
          echo "package.json: $PACKAGE_VERSION | tag: $TAG_VERSION"
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Version mismatch: package.json ($PACKAGE_VERSION) != tag ($TAG_VERSION)"
            exit 1
          fi

  build-mac:
    needs: [verify-version]
    runs-on: macos-latest
    timeout-minutes: 45
    env:
      ELECTRON_CACHE: ~/.cache/electron
      ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Cache Electron artifacts
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/electron
          ~/.cache/electron-builder
        key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-electron-
          
    - name: Install dependencies
      run: npm ci
      
    - name: Build app for macOS
      run: |
        echo "Starting macOS build..."
        npm run build-mac -- --publish=never
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: dist/*.dmg
        if-no-files-found: error
        retention-days: 7

  build-windows:
    needs: [verify-version]
    runs-on: windows-latest
    timeout-minutes: 45
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build app for Windows
      run: npm run build-win -- --publish=never
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/*.exe
        if-no-files-found: error
        retention-days: 7

  build-linux:
    needs: [verify-version]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      ELECTRON_CACHE: ~/.cache/electron
      ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm
      - name: Cache Electron artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-
      - name: Install dependencies
        run: npm ci
      - name: Build app for Linux
        run: npm run build -- --linux --publish=never
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
          if-no-files-found: warn
          retention-days: 7

  create-release:
    needs: [build-mac, build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: release-files/
        
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: release-files/

    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: release-files/
        
    - name: Generate checksums
      run: |
        cd release-files
        ls -la
        sha256sum * > SHA256SUMS.txt
        cat SHA256SUMS.txt
      
    - name: List release files
      run: ls -la release-files/
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        generate_release_notes: true
        files: release-files/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

